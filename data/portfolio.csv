name,year,desc,tech,repo
HeartWatch,2020 - 2021,"Worked with a team to create an iOS and Apple watch application commissioned by the Vancouver Stroke Program to track the health metrics of a patient group undergoing study. Data is collected, packaged, and then stored on Amazon Web Services (AWS).","Swift, iOS, WatchOS, JavaScript, AWS",Private
NBA Hometown Heroes,2021,"Worked with a team to create a data visualizer for the historic data of NBA players, linking them to their hometown, university, and playing career. Built in JavaScript though the use of D3.js.","JavaScript, HTML & CSS",https://jeremyh011.github.io/hometown-heroes/index.html
Distributed Hash Table,2021,"Worked with a team to create a server implementation that could be used to create a distributed hash table that stored key value pairs, while performing automatic load balancing, data replication, and easy growth in cluster size. The main underlying foundation of the project was the ideas presented by CHORD.","Go, Google Cloud Platform, Linux",Private
RentEasy,2020,Worked with a team to create an Android application that allowed users to both post rental properties and find these listings. A direct messaging app was also built-in to allow quick communication between landlords and potential renters. Data was stored in an online database and managed through a custom REST API created on Microsoft Azure.,"Java, Android, React Native, Azure",https://github.com/JeremyH011/CPEN321
Soccer Jock,2020,"An all in one web application to enter, track, and view player statistics for soccer players. Backend was built with Node JS, and interacted with a MySQL database.","Node JS, JavaScript, EJS, HTML & CSS, SQL",Private (access requestable)
CAPICO Library,2018,"Canvas is a learning management system (more info here: https://www.instructure.com/canvas) that is used at UBC. During my tenure there as Canvas Tech Rover, I created a Python3 library of commonly used of API calls for the use of Sauder Learning Services.","Python, Pandas",https://github.com/JeremyH011/CAPICO-Library
Python Text RPG,2018,"Created the foundation of a text-driven RPG, including randomized encounters, character creation, and a leveling system. Worked intently with the concept of inheritance to create a wide variety of relevant character sub-classes, in collaboration with the dictionary class for easy storing and reading of relevant character/scenario information.",Python,https://github.com/JeremyH011/Jeremy-s-Professional-Porfolio
Simple Simon Machine,2018,"A basic Simon says game created in 2018 to learn the basics of JavaScript, HTML & CSS. It allows the player to play a start a simple http server using any method of their choosing to serve a HTML page that allows them to play a game of Simon Says.","JavaScript, HTML & CSS",https://github.com/JeremyH011/Jeremy-s-Professional-Porfolio
Java Database,2017,"Collaborated extensively with a partner to create a Java database based on the Yelp database (in JSON format), which interacted with a multi-client server through a set of basic commands (such as add, change, and remove, restaurants, reviews, and customer information), gaining experience in concurrent programming, server design, and extended team-based development. Wrote Junit test benches and tested the performance, alongside functionality of the design using the Eclipse IDE, continuously developing debugging skills and attention to detail",Java,https://github.com/JeremyH011/Jeremy-s-Professional-Porfolio
Simple RISC Machine,2017,"Wrote Verilog code for a RISC Machine that interfaced with a DE1-SOC, containing a Datapath with a register file (with 8 registers), an ALU unit for basic computation, and a binary code shifter, which connects to a memory module. Wrote test benches and tested the performance of the design on ModelSim.","Verilog, ModelSim",Private
